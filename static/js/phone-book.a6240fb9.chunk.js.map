{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsView.js"],"names":["module","exports","dispatch","a","action","fetchContactsRequest","api","fetchContacts","data","fetchContactsSuccess","fetchContactsError","message","name","number","contact","addContactRequest","addContact","addContactSuccess","addContactError","contactId","deleteContactRequest","deleteContact","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getError","error","getFilteredContacts","createSelector","allContacts","toLowerCase","includes","ContactForm","errorMessage","handelChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","props","onSubmit","resetForm","alert","this","className","s","form","input","type","placeholder","onChange","button","Component","connect","contactsSelectors","contactsOperations","contactsActions","changeFilter","ContactListItem","id","onRemove","item","onClick","length","list","map","ContactsView","isLoading","Container","Loader","contactSelectors","contactOperations","clearFilter","contactActions"],"mappings":"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","file":"static/js/phone-book.a6240fb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3sTph\",\"input\":\"ContactForm_input__3PGNL\",\"button\":\"ContactForm_button__15swb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__3HnGF\",\"input\":\"Filter_input__2XZGv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1LdOd\",\"button\":\"ContactList_button__1WdgR\"};","import action from \"./contacts-actions\";\r\nimport api from \"../../components/service/api\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(action.fetchContactsRequest());\r\n  try {\r\n    const { data } = await api.fetchContacts();\r\n    dispatch(action.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(action.fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => async (dispatch) => {\r\n  const contact = { name, number };\r\n  dispatch(action.addContactRequest());\r\n  try {\r\n    const { data } = await api.addContact(contact);\r\n    dispatch(action.addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(action.addContactError(error.message));\r\n  }\r\n};\r\n\r\nconst deleteContact = (contactId) => async (dispatch) => {\r\n  dispatch(action.deleteContactRequest());\r\n  try {\r\n    const { data } = await api.deleteContact(contactId);\r\n    dispatch(action.deleteContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(action.deleteContactError(error.message));\r\n  }\r\n};\r\n\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getError = (state) => state.contacts.error;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (allContacts, filter) => {\r\n    return allContacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getContacts,\r\n  getFilter,\r\n  getError,\r\n  getFilteredContacts,\r\n};\r\n","import { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\r\n\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    error: false,\r\n    errorMessage: null,\r\n  };\r\n\r\n  handelChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.name && this.state.number !== \"\") {\r\n      const { name, number } = this.state;\r\n      this.props.onSubmit(name, number);\r\n      this.resetForm();\r\n      return;\r\n    }\r\n    alert(\"Please, input name and phone\");\r\n  };\r\n\r\n  resetForm = () =>\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleFormSubmit}>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={this.handelChangeForm}\r\n        />\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Enter phone number\"\r\n          value={number}\r\n          onChange={this.handelChangeForm}\r\n        />\r\n        <button className={s.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsOperations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\r\n\r\nimport s from \"../Filter/Filter.module.css\";\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <form className={s.form}>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n        placeholder=\"Enter name for Search\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport contactsSelectors from \"../../redux/contacts/contacts-selectors\";\r\n\r\nimport s from \"../ContactList/ContactList.module.css\";\r\n\r\nconst ContactListItem = ({ id, name, number, onRemove }) => {\r\n  return (\r\n    <li key={id} className={s.item}>\r\n      {name}: {number}{\" \"}\r\n      <button className={s.button} onClick={() => onRemove(id)}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactList = ({ contacts, onRemove, id }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul className={s.list} key={id}>\r\n      {contacts.map((contact) => (\r\n        <ContactListItem {...contact} onRemove={onRemove} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: contactsSelectors.getFilteredContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onRemove: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactOperations from \"../redux/contacts/contacts-operations\";\r\nimport contactActions from \"../redux/contacts/contacts-actions\";\r\nimport contactSelectors from \"../redux/contacts/contacts-selectors\";\r\n\r\nimport Container from \"../components/Container/Container\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactForm from \"../components/ContactForm/ContactForm\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport ContactList from \"../components/ContactList/ContactList\";\r\nimport Loader from \"../components/Loader/Loader\";\r\n\r\nclass ContactsView extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n    fetchContacts: PropTypes.func,\r\n    isLoading: PropTypes.bool,\r\n  };\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.props;\r\n    return (\r\n      <Container>\r\n        <ContactForm />\r\n        <Filter />\r\n        {isLoading && <Loader />}\r\n        <ContactList />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactSelectors.getContacts(state),\r\n  isLoading: contactSelectors.getLoading(state),\r\n  error: contactSelectors.getError(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(contactOperations.fetchContacts()),\r\n  clearFilter: () => dispatch(contactActions.changeFilter(\"\")),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n"],"sourceRoot":""}